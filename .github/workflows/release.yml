
name: Release Management

on:
  push:
    tags:
      - 'v*'

jobs:
  # Job 1: Validate release tag
  validate-release:
    name: Validate Release Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate tag format
        run: |
          if [[ ! ${{ github.ref_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format. Expected: v1.2.3"
            exit 1
          fi

  # Job 2: Build production artifacts
  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production

      - name: Create release archive
        run: tar -czf release-${{ github.ref_name }}.tar.gz dist/

      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-build
          path: release-${{ github.ref_name }}.tar.gz

  # Job 3: Create GitHub release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-${{ github.ref_name }}.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 4: Deploy to production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: create-release
    environment: production
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying version ${{ github.ref_name }} to production..."
          # Add your production deployment script here
          echo "Production deployment completed successfully"
